{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","parentEmployees","querySelector","stringToNumber","string","replace","sortList","list","sort","a","b","aSalary","dataset","salary","bSalary","forEach","employee","append","getEmployees","reduce","acc","curr","name","textContent","trim","position","age"],"mappings":";AAAA,aAmCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCA,IAAMA,EAAYC,SAASC,iBAAiB,MACtCC,EAAkBF,SAASG,cAAc,MAE/C,SAASC,EAAeC,GACf,OAACA,EAAOC,QAAQ,MAAO,IAGhC,SAASC,EAASC,GACO,EAAIA,GAAMC,KAAK,SAACC,EAAGC,GAClCC,IAAAA,EAAUR,EAAeM,EAAEG,QAAQC,QAGlCC,OAFSX,EAAeO,EAAEE,QAAQC,QAExBF,IAGJI,QAAQ,SAAAC,GACrBf,EAAgBgB,OAAOD,KAI3B,SAASE,EAAaX,GACb,OAAA,EAAIA,GAAMY,OAAO,SAACC,EAAKC,GACjBD,MAAAA,GAAAA,OAAAA,EAAAA,GAAK,CAAA,CACdE,KAAMD,EAAKE,YAAYC,OACvBC,SAAUJ,EAAKT,QAAQa,SACvBZ,OAAQQ,EAAKT,QAAQC,OACrBa,IAAKL,EAAKT,QAAQc,QAEnB,IAGLpB,EAASR,GACToB,EAAapB","file":"main.9135973d.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\nconst employees = document.querySelectorAll('li');\nconst parentEmployees = document.querySelector('ul');\n\nfunction stringToNumber(string) {\n  return +string.replace(/\\D/g, '');\n}\n\nfunction sortList(list) {\n  const resultSortList = [...list].sort((a, b) => {\n    const aSalary = stringToNumber(a.dataset.salary);\n    const bSalary = stringToNumber(b.dataset.salary);\n\n    return bSalary - aSalary;\n  });\n\n  resultSortList.forEach(employee => {\n    parentEmployees.append(employee);\n  });\n}\n\nfunction getEmployees(list) {\n  return [...list].reduce((acc, curr) => {\n    return [...acc, {\n      name: curr.textContent.trim(),\n      position: curr.dataset.position,\n      salary: curr.dataset.salary,\n      age: curr.dataset.age,\n    }];\n  }, []);\n}\n\nsortList(employees);\ngetEmployees(employees);\n"]}